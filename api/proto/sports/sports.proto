syntax = "proto3";
package sports;

option go_package = "/sports";

import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";

service Sports {
  // ListSports returns a list of all sports.
  rpc ListSports(ListSportsRequest) returns (ListSportsResponse) {
    option (google.api.http) = { post: "/v1/list-events", body: "*" };
  }
  // GetSportDetails returns details of a single sports event
  rpc GetSportsEventDetails(GetSportsDetailsRequest) returns (GetSportsDetailsResponse) {
    option (google.api.http) = {get: "/v1/get-event/{id}"};
  }
}

/* Requests/Responses */

message ListSportsRequest {
  ListSportsRequestFilter filter = 1;
}

message GetSportsDetailsRequest {
  int64 id = 1;
}

// Response to ListSports call.
message ListSportsResponse {
  repeated SportsEvent sportsEvents = 1;
}

message GetSportsDetailsResponse {
  repeated SportsEvent sportsEvents = 1;
}

// Filter for listing sports events.
message ListSportsRequestFilter {
  repeated int64 meeting_ids = 1;
  optional bool visible = 2;
  optional bool order_by_start_time = 3;
}

/* Resources */

// A sports event resource.
message SportsEvent {
  // ID represents a unique identifier for the event.
  int64 id = 1;
  // MeetingID represents a unique identifier for the events meeting.
  int64 meeting_id = 2;
  // Name is the official name given to the event.
  string name = 3;
  // Number represents the number of the event.
  int64 number = 4;
  // Visible represents whether or not the event is visible.
  bool visible = 5;
  // AdvertisedStartTime is the time the event is advertised to run.
  google.protobuf.Timestamp advertised_start_time = 6;
  // Status of event (OPEN or CLOSED)
  string status = 7;
}
